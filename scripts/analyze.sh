#!/bin/bash
# File: analyze.sh

set -e
[ -n "$DART_BUILD_VERBOSE" ] && set -v
[ -n "$DART_BUILD_TRACE"   ] && set -x

: ${SCRIPT_DIR:=$(dirname $0)}
. "$SCRIPT_DIR/env.sh"

: ${TMP:=./tmp}
[ -d "$TMP" ] || mkdir -p "$TMP"

ALL_DART="$TMP/all.dart"
DA_OUT="$TMP/dartanalyzer-out.txt"

$DARTANALYZER --version | tee "$DA_OUT"

echo "// File: "$ALL_DART" is autogenerated. Do not edit." > "$ALL_DART"

for FILE in $(ls lib/angular.dart \
                 perf/*_perf.dart \
                 test/*_spec.dart \
                 test/*/*_spec.dart \
                 lib/change_detection/change_detection.dart \
                 lib/change_detection/dirty_checking_change_detector.dart \
                 lib/change_detection/watch_group.dart \
             )
do
  echo "export '../$FILE' hide main, NestedRouteInitializer;" >> "$ALL_DART"
done

"$SCRIPT_DIR/generate-expressions.sh"

set +e # disable '-e' otherwise we can't get generate the analyzer "report".
$DARTANALYZER "$ALL_DART" >> "$DA_OUT"
: ${DA_EXIT_STATUS:=$?}
set -e

case "$DA_EXIT_STATUS" in
    0|1)
	# 0 means no warnings, though there may be hints.
	# 1 means that warnings were reported.
	# Print hint/warning count summary.
	grep " found." "$DA_OUT" && echo "For details see $DA_OUT"
	;;
    *) # There were errors, dump the output.
	echo "------------------------------------------------------------------------------"
	# echo "$DARTANALYZER $ALL_DART > $DA_OUT"
	# echo "cat $DA_OUT"
	cat "$DA_OUT"
	echo "------------------------------------------------------------------------------"
	;;
esac
